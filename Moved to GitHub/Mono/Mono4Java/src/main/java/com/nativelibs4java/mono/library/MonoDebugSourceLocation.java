package com.nativelibs4java.mono.library;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class MonoDebugSourceLocation extends com.ochafik.lang.jnaerator.runtime.Structure<MonoDebugSourceLocation, MonoDebugSourceLocation.ByValue, MonoDebugSourceLocation.ByReference> {
	/// C type : char*
	public com.sun.jna.Pointer source_file;
	public int row;
	public int column;
	public int il_offset;
	public MonoDebugSourceLocation() {
		super();
	}
	/// @param source_file C type : char*
	public MonoDebugSourceLocation(com.sun.jna.Pointer source_file, int row, int column, int il_offset) {
		super();
		this.source_file = source_file;
		this.row = row;
		this.column = column;
		this.il_offset = il_offset;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected MonoDebugSourceLocation newInstance() { return new MonoDebugSourceLocation(); }
	public static MonoDebugSourceLocation[] newArray(int arrayLength) {
		return com.ochafik.lang.jnaerator.runtime.Structure.newArray(MonoDebugSourceLocation.class, arrayLength);
	}
	public static class ByReference extends MonoDebugSourceLocation implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends MonoDebugSourceLocation implements com.sun.jna.Structure.ByValue {}
}

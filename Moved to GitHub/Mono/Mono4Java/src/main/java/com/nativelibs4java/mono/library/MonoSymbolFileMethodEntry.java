package com.nativelibs4java.mono.library;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class MonoSymbolFileMethodEntry extends com.ochafik.lang.jnaerator.runtime.Structure<MonoSymbolFileMethodEntry, MonoSymbolFileMethodEntry.ByValue, MonoSymbolFileMethodEntry.ByReference> {
	public int _token;
	public int _data_offset;
	public int _line_number_table;
	public MonoSymbolFileMethodEntry() {
		super();
	}
	public MonoSymbolFileMethodEntry(int _token, int _data_offset, int _line_number_table) {
		super();
		this._token = _token;
		this._data_offset = _data_offset;
		this._line_number_table = _line_number_table;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected MonoSymbolFileMethodEntry newInstance() { return new MonoSymbolFileMethodEntry(); }
	public static MonoSymbolFileMethodEntry[] newArray(int arrayLength) {
		return com.ochafik.lang.jnaerator.runtime.Structure.newArray(MonoSymbolFileMethodEntry.class, arrayLength);
	}
	public static class ByReference extends MonoSymbolFileMethodEntry implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends MonoSymbolFileMethodEntry implements com.sun.jna.Structure.ByValue {}
}

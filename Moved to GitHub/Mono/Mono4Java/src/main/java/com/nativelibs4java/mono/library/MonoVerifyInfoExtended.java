package com.nativelibs4java.mono.library;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class MonoVerifyInfoExtended extends com.ochafik.lang.jnaerator.runtime.Structure<MonoVerifyInfoExtended, MonoVerifyInfoExtended.ByValue, MonoVerifyInfoExtended.ByReference> {
	/// C type : MonoVerifyInfo
	public com.nativelibs4java.mono.library.MonoVerifyInfo info;
	/// should be one of MONO_EXCEPTION_*
	public byte exception_type;
	public MonoVerifyInfoExtended() {
		super();
	}
	/**
	 * @param info C type : MonoVerifyInfo<br>
	 * @param exception_type should be one of MONO_EXCEPTION_*
	 */
	public MonoVerifyInfoExtended(com.nativelibs4java.mono.library.MonoVerifyInfo info, byte exception_type) {
		super();
		this.info = info;
		this.exception_type = exception_type;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected MonoVerifyInfoExtended newInstance() { return new MonoVerifyInfoExtended(); }
	public static MonoVerifyInfoExtended[] newArray(int arrayLength) {
		return com.ochafik.lang.jnaerator.runtime.Structure.newArray(MonoVerifyInfoExtended.class, arrayLength);
	}
	public static class ByReference extends MonoVerifyInfoExtended implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends MonoVerifyInfoExtended implements com.sun.jna.Structure.ByValue {}
}

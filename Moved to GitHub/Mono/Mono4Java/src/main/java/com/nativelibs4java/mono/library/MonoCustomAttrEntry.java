package com.nativelibs4java.mono.library;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class MonoCustomAttrEntry extends com.ochafik.lang.jnaerator.runtime.Structure<MonoCustomAttrEntry, MonoCustomAttrEntry.ByValue, MonoCustomAttrEntry.ByReference> {
	/// C type : MonoMethod*
	public com.nativelibs4java.mono.library.MonoLibrary.MonoMethod ctor;
	public int data_size;
	/// C type : const guchar*
	public com.sun.jna.Pointer data;
	public MonoCustomAttrEntry() {
		super();
	}
	/**
	 * @param ctor C type : MonoMethod*<br>
	 * @param data C type : const guchar*
	 */
	public MonoCustomAttrEntry(com.nativelibs4java.mono.library.MonoLibrary.MonoMethod ctor, int data_size, com.sun.jna.Pointer data) {
		super();
		this.ctor = ctor;
		this.data_size = data_size;
		this.data = data;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected MonoCustomAttrEntry newInstance() { return new MonoCustomAttrEntry(); }
	public static MonoCustomAttrEntry[] newArray(int arrayLength) {
		return com.ochafik.lang.jnaerator.runtime.Structure.newArray(MonoCustomAttrEntry.class, arrayLength);
	}
	public static class ByReference extends MonoCustomAttrEntry implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends MonoCustomAttrEntry implements com.sun.jna.Structure.ByValue {}
}

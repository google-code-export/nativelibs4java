package com.nativelibs4java.mono.library;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class MonoDisHelper extends com.ochafik.lang.jnaerator.runtime.Structure<MonoDisHelper, MonoDisHelper.ByValue, MonoDisHelper.ByReference> {
	/// C type : const char*
	public com.sun.jna.Pointer newline;
	/// C type : const char*
	public com.sun.jna.Pointer label_format;
	/// C type : const char*
	public com.sun.jna.Pointer label_target;
	/// C type : MonoDisIndenter
	public com.nativelibs4java.mono.library.MonoLibrary.MonoDisIndenter indenter;
	/// C type : MonoDisTokener
	public com.nativelibs4java.mono.library.MonoLibrary.MonoDisTokener tokener;
	/// C type : void*
	public com.sun.jna.Pointer user_data;
	public MonoDisHelper() {
		super();
	}
	/**
	 * @param newline C type : const char*<br>
	 * @param label_format C type : const char*<br>
	 * @param label_target C type : const char*<br>
	 * @param indenter C type : MonoDisIndenter<br>
	 * @param tokener C type : MonoDisTokener<br>
	 * @param user_data C type : void*
	 */
	public MonoDisHelper(com.sun.jna.Pointer newline, com.sun.jna.Pointer label_format, com.sun.jna.Pointer label_target, com.nativelibs4java.mono.library.MonoLibrary.MonoDisIndenter indenter, com.nativelibs4java.mono.library.MonoLibrary.MonoDisTokener tokener, com.sun.jna.Pointer user_data) {
		super();
		this.newline = newline;
		this.label_format = label_format;
		this.label_target = label_target;
		this.indenter = indenter;
		this.tokener = tokener;
		this.user_data = user_data;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected MonoDisHelper newInstance() { return new MonoDisHelper(); }
	public static MonoDisHelper[] newArray(int arrayLength) {
		return com.ochafik.lang.jnaerator.runtime.Structure.newArray(MonoDisHelper.class, arrayLength);
	}
	public static class ByReference extends MonoDisHelper implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends MonoDisHelper implements com.sun.jna.Structure.ByValue {}
}

package com.nativelibs4java.mono.library;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class MonoSymbolFile extends com.ochafik.lang.jnaerator.runtime.Structure<MonoSymbolFile, MonoSymbolFile.ByValue, MonoSymbolFile.ByReference> {
	/// C type : const char*
	public com.sun.jna.Pointer raw_contents;
	public int raw_contents_size;
	/// C type : void*
	public com.sun.jna.Pointer raw_contents_handle;
	public int major_version;
	public int minor_version;
	/// C type : char*
	public com.sun.jna.Pointer filename;
	/// C type : GHashTable*
	public com.nativelibs4java.mono.library.MonoLibrary.GHashTable method_hash;
	/// C type : MonoSymbolFileOffsetTable*
	public com.nativelibs4java.mono.library.MonoSymbolFileOffsetTable.ByReference offset_table;
	public MonoSymbolFile() {
		super();
	}
	/**
	 * @param raw_contents C type : const char*<br>
	 * @param raw_contents_handle C type : void*<br>
	 * @param filename C type : char*<br>
	 * @param method_hash C type : GHashTable*<br>
	 * @param offset_table C type : MonoSymbolFileOffsetTable*
	 */
	public MonoSymbolFile(com.sun.jna.Pointer raw_contents, int raw_contents_size, com.sun.jna.Pointer raw_contents_handle, int major_version, int minor_version, com.sun.jna.Pointer filename, com.nativelibs4java.mono.library.MonoLibrary.GHashTable method_hash, com.nativelibs4java.mono.library.MonoSymbolFileOffsetTable.ByReference offset_table) {
		super();
		this.raw_contents = raw_contents;
		this.raw_contents_size = raw_contents_size;
		this.raw_contents_handle = raw_contents_handle;
		this.major_version = major_version;
		this.minor_version = minor_version;
		this.filename = filename;
		this.method_hash = method_hash;
		this.offset_table = offset_table;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected MonoSymbolFile newInstance() { return new MonoSymbolFile(); }
	public static MonoSymbolFile[] newArray(int arrayLength) {
		return com.ochafik.lang.jnaerator.runtime.Structure.newArray(MonoSymbolFile.class, arrayLength);
	}
	public static class ByReference extends MonoSymbolFile implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends MonoSymbolFile implements com.sun.jna.Structure.ByValue {}
}

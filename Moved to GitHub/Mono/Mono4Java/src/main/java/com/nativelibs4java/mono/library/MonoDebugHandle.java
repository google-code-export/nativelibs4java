package com.nativelibs4java.mono.library;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class MonoDebugHandle extends com.ochafik.lang.jnaerator.runtime.Structure<MonoDebugHandle, MonoDebugHandle.ByValue, MonoDebugHandle.ByReference> {
	public int index;
	/// C type : char*
	public com.sun.jna.Pointer image_file;
	/// C type : MonoImage*
	public com.nativelibs4java.mono.library.MonoLibrary.MonoImage image;
	/// C type : MonoDebugDataTable*
	public com.nativelibs4java.mono.library.MonoLibrary.MonoDebugDataTable type_table;
	/// C type : MonoSymbolFile*
	public com.nativelibs4java.mono.library.MonoSymbolFile.ByReference symfile;
	public MonoDebugHandle() {
		super();
	}
	/**
	 * @param image_file C type : char*<br>
	 * @param image C type : MonoImage*<br>
	 * @param type_table C type : MonoDebugDataTable*<br>
	 * @param symfile C type : MonoSymbolFile*
	 */
	public MonoDebugHandle(int index, com.sun.jna.Pointer image_file, com.nativelibs4java.mono.library.MonoLibrary.MonoImage image, com.nativelibs4java.mono.library.MonoLibrary.MonoDebugDataTable type_table, com.nativelibs4java.mono.library.MonoSymbolFile.ByReference symfile) {
		super();
		this.index = index;
		this.image_file = image_file;
		this.image = image;
		this.type_table = type_table;
		this.symfile = symfile;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected MonoDebugHandle newInstance() { return new MonoDebugHandle(); }
	public static MonoDebugHandle[] newArray(int arrayLength) {
		return com.ochafik.lang.jnaerator.runtime.Structure.newArray(MonoDebugHandle.class, arrayLength);
	}
	public static class ByReference extends MonoDebugHandle implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends MonoDebugHandle implements com.sun.jna.Structure.ByValue {}
}
